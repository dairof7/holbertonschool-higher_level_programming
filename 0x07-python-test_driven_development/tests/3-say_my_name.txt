The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``0-add_integer`` module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:
    >>> say_my_name("Dairo", "Facundo")
    My name is Dairo Facundo

Now use it:
    >>> say_my_name("", "Facundo")
    My name is  Facundo

Now use it:
    >>> say_my_name("Dairo")
    My name is Dairo 

Now use it:
    >>> say_my_name("Dairo", "")
    My name is Dairo 

Now use it:
    >>> say_my_name("", "")
    My name is  

######################################################################################

Now use it:
    >>> say_my_name("Dairo", 2)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Now use it:
    >>> say_my_name(2, "Dairo")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Now use it:
    >>> say_my_name(["3"], "Dairo")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Now use it:
    >>> say_my_name(("fa", "tr"), "Dairo")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Now use it:
    >>> say_my_name(None, None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

Now use it:
    >>> say_my_name("None", None)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Now use it:
    >>> say_my_name("None", True)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Now use it:
    >>> say_my_name(["as", "sds"])
    Traceback (most recent call last):
    TypeError: first_name must be a string