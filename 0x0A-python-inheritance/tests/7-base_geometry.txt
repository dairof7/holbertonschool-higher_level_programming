The ``7-base_geometry`` module
======================

Using ``base_geometry``
-------------------

This is an example text file in reStructuredText format.  First import
``base_geometry`` from the ``0-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> t = BaseGeometry()
    >>> t.integer_validator("No_int", "5")
    Traceback (most recent call last):
    TypeError: No_int must be an integer

    >>> t.integer_validator("", 2322)

    >>> t.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> t.integer_validator("list", [12, 3, 5, 2])
    Traceback (most recent call last):
    TypeError: list must be an integer

    >>> t.integer_validator("asdas")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> t.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> t.integer_validator("list", True)
    Traceback (most recent call last):
    TypeError: list must be an integer

    >>> t.integer_validator("my_int", (2, 3))
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> t.integer_validator("None", None)
    Traceback (most recent call last):
    TypeError: None must be an integer

    >>> t.integer_validator("my_int", [5, 6])
    Traceback (most recent call last):
    TypeError: my_int must be an integer